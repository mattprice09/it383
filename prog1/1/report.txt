	The C system API call "fork()" is used to create child processes. Essentially, when "fork()" is called then a child process is created and its parent is the calling program.
	The command "execlp()" is used to execute commands. This gives the C programmer the ability to directly call any executable files in the system with the ability to include arguments for those executables. For example, if a user wanted to ping itself, you would simply run `execlp("sbin/ping", "sbin/ping", "127.0.0.1", (char *)NULL)`.
	The "wait()" command is typically used in multiprocessing to force your program to wait for the completion of child processes. When the "wait()" command is executed, the parent process will block until it receives and exit signal from a child process. If there wasn't a child process created by the program that calls "wait()" then nothing will happen at all.
